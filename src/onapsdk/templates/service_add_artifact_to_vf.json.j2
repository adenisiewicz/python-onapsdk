{
    "artifactGroupType":"DEPLOYMENT",
    "artifactName":"k8s_tca_clampnode.yaml",
    "artifactLabel":"test",
    "artifactType":"DCAE_INVENTORY_BLUEPRINT",
    "description":"test","payloadData":"Iw0KIyA9PT09PT09PT09PT1MSUNFTlNFX1NUQVJUPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KIyBDb3B5cmlnaHQgKGMpIDIwMTkgQVQmVCBJbnRlbGxlY3R1YWwgUHJvcGVydHkuIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQojIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KIyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQojIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KIw0KIyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KIw0KIyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQojIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQojIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KIyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQojIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KIyA9PT09PT09PT09PT1MSUNFTlNFX0VORD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQp0b3NjYV9kZWZpbml0aW9uc192ZXJzaW9uOiBjbG91ZGlmeV9kc2xfMV8zDQoNCmRlc2NyaXB0aW9uOiA+DQogIFRoaXMgYmx1ZXByaW50IGRlcGxveXMvbWFuYWdlcyB0aGUgVENBIG1vZHVsZSBhcyBhIERvY2tlciBjb250YWluZXINCg0KaW1wb3J0czoNCiAgLSBodHRwczovL3d3dy5nZXRjbG91ZGlmeS5vcmcvc3BlYy9jbG91ZGlmeS80LjUuNS90eXBlcy55YW1sDQogIC0gImh0dHBzOi8vbmV4dXMub25hcC5vcmcvc2VydmljZS9sb2NhbC9yZXBvc2l0b3JpZXMvcmF3L2NvbnRlbnQvb3JnLm9uYXAuZGNhZWdlbjIucGxhdGZvcm0ucGx1Z2lucy9SNi9rOHNwbHVnaW4vMS43LjIvazhzcGx1Z2luX3R5cGVzLnlhbWwiDQogIC0gImh0dHBzOi8vbmV4dXMub25hcC5vcmcvc2VydmljZS9sb2NhbC9yZXBvc2l0b3JpZXMvcmF3L2NvbnRlbnQvb3JnLm9uYXAuZGNhZWdlbjIucGxhdGZvcm0ucGx1Z2lucy9SNi9jbGFtcHBvbGljeXBsdWdpbi8xLjEuMC9jbGFtcHBvbGljeXBsdWdpbl90eXBlcy55YW1sIg0KaW5wdXRzOg0KICBhYWlFbnJpY2htZW50SG9zdDoNCiAgICB0eXBlOiBzdHJpbmcNCiAgICBkZWZhdWx0OiAiYWFpLm9uYXAuc3ZjLmNsdXN0ZXIubG9jYWwiDQogIGFhaUVucmljaG1lbnRQb3J0Og0KICAgIHR5cGU6IHN0cmluZw0KICAgIGRlZmF1bHQ6ICI4NDQzIg0KICBlbmFibGVBQUlFbnJpY2htZW50Og0KICAgIHR5cGU6IHN0cmluZw0KICAgIGRlZmF1bHQ6ICJ0cnVlIg0KICBkbWFhcF9ob3N0Og0KICAgIHR5cGU6IHN0cmluZw0KICAgIGRlZmF1bHQ6ICJtZXNzYWdlLXJvdXRlci5vbmFwLnN2Yy5jbHVzdGVyLmxvY2FsIg0KICBkbWFhcF9wb3J0Og0KICAgIHR5cGU6IHN0cmluZw0KICAgIGRlZmF1bHQ6ICIzOTA0Ig0KICBlbmFibGVSZWRpc0NhY2hpbmc6DQogICAgdHlwZTogc3RyaW5nDQogICAgZGVmYXVsdDogImZhbHNlIg0KICByZWRpc0hvc3RzOg0KICAgIHR5cGU6IHN0cmluZw0KICAgIGRlZmF1bHQ6ICJkY2FlLXJlZGlzLm9uYXAuc3ZjLmNsdXN0ZXIubG9jYWw6NjM3OSINCiAgdGFnX3ZlcnNpb246DQogICAgdHlwZTogc3RyaW5nDQogICAgZGVmYXVsdDogIm5leHVzMy5vbmFwLm9yZzoxMDAwMS9vbmFwL29yZy5vbmFwLmRjYWVnZW4yLmRlcGxveW1lbnRzLnRjYS1jZGFwLWNvbnRhaW5lcjoxLjIuMiINCiAgY29uc3VsX2hvc3Q6DQogICAgdHlwZTogc3RyaW5nDQogICAgZGVmYXVsdDogImNvbnN1bC1zZXJ2ZXIub25hcCINCiAgY29uc3VsX3BvcnQ6DQogICAgdHlwZTogc3RyaW5nDQogICAgZGVmYXVsdDogIjg1MDAiDQogIGNic19ob3N0Og0KICAgIHR5cGU6IHN0cmluZw0KICAgIGRlZmF1bHQ6ICJjb25maWctYmluZGluZy1zZXJ2aWNlIg0KICBjYnNfcG9ydDoNCiAgICB0eXBlOiBzdHJpbmcNCiAgICBkZWZhdWx0OiAiMTAwMDAiDQogIHBvbGljeV9pZDoNCiAgICB0eXBlOiBzdHJpbmcNCiAgICBkZWZhdWx0OiAib25hcC5yZXN0YXJ0LnRjYSINCiAgZXh0ZXJuYWxfcG9ydDoNCiAgICB0eXBlOiBzdHJpbmcNCiAgICBkZXNjcmlwdGlvbjogS3ViZXJuZXRlcyBub2RlIHBvcnQgb24gd2hpY2ggQ0RBUGd1aSBpcyBleHBvc2VkDQogICAgZGVmYXVsdDogIjMyMDEyIg0KICBwb2xpY3lfbW9kZWxfaWQ6DQogICAgdHlwZTogc3RyaW5nDQogICAgZGVmYXVsdDogIm9uYXAucG9saWNpZXMubW9uaXRvcmluZy5jZGFwLnRjYS5oaS5sby5hcHAiDQpub2RlX3RlbXBsYXRlczoNCiAgdGNhX2s4czoNCiAgICB0eXBlOiBkY2FlLm5vZGVzLkNvbnRhaW5lcml6ZWRTZXJ2aWNlQ29tcG9uZW50DQogICAgcmVsYXRpb25zaGlwczoNCiAgICAgIC0gdGFyZ2V0OiB0Y2FfcG9saWN5DQogICAgICAgIHR5cGU6IGNsb3VkaWZ5LnJlbGF0aW9uc2hpcHMuZGVwZW5kc19vbg0KICAgIHByb3BlcnRpZXM6DQogICAgICAgIHNlcnZpY2VfY29tcG9uZW50X3R5cGU6ICdkY2FlZ2VuMi1hbmFseXRpY3MtdGNhJw0KICAgICAgICBhcHBsaWNhdGlvbl9jb25maWc6IHt9DQogICAgICAgIGRvY2tlcl9jb25maWc6IHt9DQogICAgICAgIGltYWdlOg0KICAgICAgICAgIGdldF9pbnB1dDogdGFnX3ZlcnNpb24NCiAgICAgICAgbG9nX2luZm86DQogICAgICAgICAgbG9nX2RpcmVjdG9yeTogIi9vcHQvYXBwL1RDQW5hbHl0aWNzL2xvZ3MiDQogICAgICAgIGFwcGxpY2F0aW9uX2NvbmZpZzoNCiAgICAgICAgICAgIGFwcF9jb25maWc6DQogICAgICAgICAgICAgICAgYXBwRGVzY3JpcHRpb246IERDQUUgQW5hbHl0aWNzIFRocmVzaG9sZCBDcm9zc2luZyBBbGVydCBBcHBsaWNhdGlvbg0KICAgICAgICAgICAgICAgIGFwcE5hbWU6IGRjYWUtdGNhDQogICAgICAgICAgICAgICAgdGNhQWxlcnRzQWJhdGVtZW50VGFibGVOYW1lOiBUQ0FBbGVydHNBYmF0ZW1lbnRUYWJsZQ0KICAgICAgICAgICAgICAgIHRjYUFsZXJ0c0FiYXRlbWVudFRhYmxlVFRMU2Vjb25kczogJzE3MjgwMDAnDQogICAgICAgICAgICAgICAgdGNhU3Vic2NyaWJlck91dHB1dFN0cmVhbU5hbWU6IFRDQVN1YnNjcmliZXJPdXRwdXRTdHJlYW0NCiAgICAgICAgICAgICAgICB0Y2FWRVNBbGVydHNUYWJsZU5hbWU6IFRDQVZFU0FsZXJ0c1RhYmxlDQogICAgICAgICAgICAgICAgdGNhVkVTQWxlcnRzVGFibGVUVExTZWNvbmRzOiAnMTcyODAwMCcNCiAgICAgICAgICAgICAgICB0Y2FWRVNNZXNzYWdlU3RhdHVzVGFibGVOYW1lOiBUQ0FWRVNNZXNzYWdlU3RhdHVzVGFibGUNCiAgICAgICAgICAgICAgICB0Y2FWRVNNZXNzYWdlU3RhdHVzVGFibGVUVExTZWNvbmRzOiAnODY0MDAnDQogICAgICAgICAgICAgICAgdGhyZXNob2xkQ2FsY3VsYXRvckZsb3dsZXRJbnN0YW5jZXM6ICcyJw0KICAgICAgICAgICAgYXBwX3ByZWZlcmVuY2VzOg0KICAgICAgICAgICAgICAgIGFhaUVucmljaG1lbnRIb3N0Og0KICAgICAgICAgICAgICAgICAgICBnZXRfaW5wdXQ6IGFhaUVucmljaG1lbnRIb3N0DQogICAgICAgICAgICAgICAgYWFpRW5yaWNobWVudElnbm9yZVNTTENlcnRpZmljYXRlRXJyb3JzOiAndHJ1ZScNCiAgICAgICAgICAgICAgICBhYWlFbnJpY2htZW50UG9ydE51bWJlcjogJzg0NDMnDQogICAgICAgICAgICAgICAgYWFpRW5yaWNobWVudFByb3RvY29sOiBodHRwcw0KICAgICAgICAgICAgICAgIGFhaUVucmljaG1lbnRVc2VyTmFtZTogZGNhZUBkY2FlLm9uYXAub3JnDQogICAgICAgICAgICAgICAgYWFpRW5yaWNobWVudFVzZXJQYXNzd29yZDogZGVtbzEyMzQ1NiENCiAgICAgICAgICAgICAgICBhYWlWTUVucmljaG1lbnRBUElQYXRoOiAvYWFpL3YxMS9zZWFyY2gvbm9kZXMtcXVlcnkNCiAgICAgICAgICAgICAgICBhYWlWTkZFbnJpY2htZW50QVBJUGF0aDogL2FhaS92MTEvbmV0d29yay9nZW5lcmljLXZuZnMvZ2VuZXJpYy12bmYNCiAgICAgICAgICAgICAgICBlbmFibGVBQUlFbnJpY2htZW50Og0KICAgICAgICAgICAgICAgICAgICBnZXRfaW5wdXQ6IGVuYWJsZUFBSUVucmljaG1lbnQNCiAgICAgICAgICAgICAgICBlbmFibGVSZWRpc0NhY2hpbmc6DQogICAgICAgICAgICAgICAgICAgIGdldF9pbnB1dDogZW5hYmxlUmVkaXNDYWNoaW5nDQogICAgICAgICAgICAgICAgcmVkaXNIb3N0czoNCiAgICAgICAgICAgICAgICAgICAgZ2V0X2lucHV0OiByZWRpc0hvc3RzDQogICAgICAgICAgICAgICAgZW5hYmxlQWxlcnRDRUZGb3JtYXQ6ICdmYWxzZScNCiAgICAgICAgICAgICAgICBwdWJsaXNoZXJDb250ZW50VHlwZTogYXBwbGljYXRpb24vanNvbg0KICAgICAgICAgICAgICAgIHB1Ymxpc2hlckhvc3ROYW1lOg0KICAgICAgICAgICAgICAgICAgICBnZXRfaW5wdXQ6IGRtYWFwX2hvc3QNCiAgICAgICAgICAgICAgICBwdWJsaXNoZXJIb3N0UG9ydDoNCiAgICAgICAgICAgICAgICAgICAgZ2V0X2lucHV0OiBkbWFhcF9wb3J0DQogICAgICAgICAgICAgICAgcHVibGlzaGVyTWF4QmF0Y2hTaXplOiAnMScNCiAgICAgICAgICAgICAgICBwdWJsaXNoZXJNYXhSZWNvdmVyeVF1ZXVlU2l6ZTogJzEwMDAwMCcNCiAgICAgICAgICAgICAgICBwdWJsaXNoZXJQb2xsaW5nSW50ZXJ2YWw6ICcyMDAwMCcNCiAgICAgICAgICAgICAgICBwdWJsaXNoZXJQcm90b2NvbDogaHR0cA0KICAgICAgICAgICAgICAgIHB1Ymxpc2hlclRvcGljTmFtZTogdW5hdXRoZW50aWNhdGVkLkRDQUVfQ0xfT1VUUFVUDQogICAgICAgICAgICAgICAgc3Vic2NyaWJlckNvbnN1bWVyR3JvdXA6IE9wZW5EQ0FFLWNsYW1wDQogICAgICAgICAgICAgICAgc3Vic2NyaWJlckNvbnN1bWVySWQ6IGMxMg0KICAgICAgICAgICAgICAgIHN1YnNjcmliZXJDb250ZW50VHlwZTogYXBwbGljYXRpb24vanNvbg0KICAgICAgICAgICAgICAgIHN1YnNjcmliZXJIb3N0TmFtZToNCiAgICAgICAgICAgICAgICAgICAgZ2V0X2lucHV0OiBkbWFhcF9ob3N0DQogICAgICAgICAgICAgICAgc3Vic2NyaWJlckhvc3RQb3J0Og0KICAgICAgICAgICAgICAgICAgICBnZXRfaW5wdXQ6IGRtYWFwX3BvcnQNCiAgICAgICAgICAgICAgICBzdWJzY3JpYmVyTWVzc2FnZUxpbWl0OiAnLTEnDQogICAgICAgICAgICAgICAgc3Vic2NyaWJlclBvbGxpbmdJbnRlcnZhbDogJzMwMDAwJw0KICAgICAgICAgICAgICAgIHN1YnNjcmliZXJQcm90b2NvbDogaHR0cA0KICAgICAgICAgICAgICAgIHN1YnNjcmliZXJUaW1lb3V0TVM6ICctMScNCiAgICAgICAgICAgICAgICBzdWJzY3JpYmVyVG9waWNOYW1lOiB1bmF1dGhlbnRpY2F0ZWQuVkVTX01FQVNVUkVNRU5UX09VVFBVVA0KICAgICAgICAgICAgICAgICN0Y2FfcG9saWN5OiAneyJkb21haW4iOiJtZWFzdXJlbWVudHNGb3JWZlNjYWxpbmciLCJtZXRyaWNzUGVyRXZlbnROYW1lIjpbeyJldmVudE5hbWUiOiJ2RmlyZXdhbGxCcm9hZGNhc3RQYWNrZXRzIiwiY29udHJvbExvb3BTY2hlbWFUeXBlIjoiVk0iLCJwb2xpY3lTY29wZSI6IkRDQUUiLCJwb2xpY3lOYW1lIjoiRENBRS5Db25maWdfdGNhLWhpLWxvIiwicG9saWN5VmVyc2lvbiI6InYwLjAuMSIsInRocmVzaG9sZHMiOlt7ImNsb3NlZExvb3BDb250cm9sTmFtZSI6IkNvbnRyb2xMb29wLXZGaXJld2FsbC1kMGExZGZjNi05NGY1LTRmZDQtYTViNS00NjMwYjQzODg1MGEiLCJ2ZXJzaW9uIjoiMS4wLjIiLCJmaWVsZFBhdGgiOiIkLmV2ZW50Lm1lYXN1cmVtZW50c0ZvclZmU2NhbGluZ0ZpZWxkcy52TmljUGVyZm9ybWFuY2VBcnJheVsqXS5yZWNlaXZlZFRvdGFsUGFja2V0c0RlbHRhIiwidGhyZXNob2xkVmFsdWUiOjMwMCwiZGlyZWN0aW9uIjoiTEVTU19PUl9FUVVBTCIsInNldmVyaXR5IjoiTUFKT1IiLCJjbG9zZWRMb29wRXZlbnRTdGF0dXMiOiJPTlNFVCJ9LHsiY2xvc2VkTG9vcENvbnRyb2xOYW1lIjoiQ29udHJvbExvb3AtdkZpcmV3YWxsLWQwYTFkZmM2LTk0ZjUtNGZkNC1hNWI1LTQ2MzBiNDM4ODUwYSIsInZlcnNpb24iOiIxLjAuMiIsImZpZWxkUGF0aCI6IiQuZXZlbnQubWVhc3VyZW1lbnRzRm9yVmZTY2FsaW5nRmllbGRzLnZOaWNQZXJmb3JtYW5jZUFycmF5WypdLnJlY2VpdmVkVG90YWxQYWNrZXRzRGVsdGEiLCJ0aHJlc2hvbGRWYWx1ZSI6NzAwLCJkaXJlY3Rpb24iOiJHUkVBVEVSX09SX0VRVUFMIiwic2V2ZXJpdHkiOiJDUklUSUNBTCIsImNsb3NlZExvb3BFdmVudFN0YXR1cyI6Ik9OU0VUIn1dfSx7ImV2ZW50TmFtZSI6InZMb2FkQmFsYW5jZXIiLCJjb250cm9sTG9vcFNjaGVtYVR5cGUiOiJWTSIsInBvbGljeVNjb3BlIjoiRENBRSIsInBvbGljeU5hbWUiOiJEQ0FFLkNvbmZpZ190Y2EtaGktbG8iLCJwb2xpY3lWZXJzaW9uIjoidjAuMC4xIiwidGhyZXNob2xkcyI6W3siY2xvc2VkTG9vcENvbnRyb2xOYW1lIjoiQ29udHJvbExvb3AtdkROUy02ZjM3ZjU2ZC1hODdkLTRiODUtYjZhOS1jYzk1M2NmNzc5YjMiLCJ2ZXJzaW9uIjoiMS4wLjIiLCJmaWVsZFBhdGgiOiIkLmV2ZW50Lm1lYXN1cmVtZW50c0ZvclZmU2NhbGluZ0ZpZWxkcy52TmljUGVyZm9ybWFuY2VBcnJheVsqXS5yZWNlaXZlZFRvdGFsUGFja2V0c0RlbHRhIiwidGhyZXNob2xkVmFsdWUiOjMwMCwiZGlyZWN0aW9uIjoiR1JFQVRFUl9PUl9FUVVBTCIsInNldmVyaXR5IjoiQ1JJVElDQUwiLCJjbG9zZWRMb29wRXZlbnRTdGF0dXMiOiJPTlNFVCJ9XX0seyJldmVudE5hbWUiOiJNZWFzdXJlbWVudF92R01VWCIsImNvbnRyb2xMb29wU2NoZW1hVHlwZSI6IlZORiIsInBvbGljeVNjb3BlIjoiRENBRSIsInBvbGljeU5hbWUiOiJEQ0FFLkNvbmZpZ190Y2EtaGktbG8iLCJwb2xpY3lWZXJzaW9uIjoidjAuMC4xIiwidGhyZXNob2xkcyI6W3siY2xvc2VkTG9vcENvbnRyb2xOYW1lIjoiQ29udHJvbExvb3AtdkNQRS00OGYwYzJjMy1hMTcyLTQxOTItOWFlMy0wNTIyNzQxODFiNmUiLCJ2ZXJzaW9uIjoiMS4wLjIiLCJmaWVsZFBhdGgiOiIkLmV2ZW50Lm1lYXN1cmVtZW50c0ZvclZmU2NhbGluZ0ZpZWxkcy5hZGRpdGlvbmFsTWVhc3VyZW1lbnRzWypdLmFycmF5T2ZGaWVsZHNbMF0udmFsdWUiLCJ0aHJlc2hvbGRWYWx1ZSI6MCwiZGlyZWN0aW9uIjoiRVFVQUwiLCJzZXZlcml0eSI6Ik1BSk9SIiwiY2xvc2VkTG9vcEV2ZW50U3RhdHVzIjoiQUJBVEVEIn0seyJjbG9zZWRMb29wQ29udHJvbE5hbWUiOiJDb250cm9sTG9vcC12Q1BFLTQ4ZjBjMmMzLWExNzItNDE5Mi05YWUzLTA1MjI3NDE4MWI2ZSIsInZlcnNpb24iOiIxLjAuMiIsImZpZWxkUGF0aCI6IiQuZXZlbnQubWVhc3VyZW1lbnRzRm9yVmZTY2FsaW5nRmllbGRzLmFkZGl0aW9uYWxNZWFzdXJlbWVudHNbKl0uYXJyYXlPZkZpZWxkc1swXS52YWx1ZSIsInRocmVzaG9sZFZhbHVlIjowLCJkaXJlY3Rpb24iOiJHUkVBVEVSIiwic2V2ZXJpdHkiOiJDUklUSUNBTCIsImNsb3NlZExvb3BFdmVudFN0YXR1cyI6Ik9OU0VUIn1dfV19Jw0KICAgICAgICAgICAgICAgIHRjYV9wb2xpY3k6ICcnDQogICAgICAgIHNlcnZpY2VfY29tcG9uZW50X3R5cGU6IGRjYWVnZW4yLWFuYWx5dGljc190Y2ENCiAgICBpbnRlcmZhY2VzOg0KICAgICAgY2xvdWRpZnkuaW50ZXJmYWNlcy5saWZlY3ljbGU6DQogICAgICAgIHN0YXJ0Og0KICAgICAgICAgIGlucHV0czoNCiAgICAgICAgICAgIGVudnM6DQogICAgICAgICAgICAgICAgRE1BQVBIT1NUOg0KICAgICAgICAgICAgICAgICAgICB7IGdldF9pbnB1dDogZG1hYXBfaG9zdCB9DQogICAgICAgICAgICAgICAgRE1BQVBQT1JUOiAiMzkwNCINCiAgICAgICAgICAgICAgICBETUFBUFBVQlRPUElDOiAidW5hdXRoZW50aWNhdGVkLkRDQUVfQ0xfT1VUUFVUIg0KICAgICAgICAgICAgICAgIERNQUFQU1VCVE9QSUM6ICJ1bmF1dGhlbnRpY2F0ZWQuVkVTX01FQVNVUkVNRU5UX09VVFBVVCINCiAgICAgICAgICAgICAgICBBQUlIT1NUOg0KICAgICAgICAgICAgICAgICAgICB7IGdldF9pbnB1dDogYWFpRW5yaWNobWVudEhvc3QgfQ0KICAgICAgICAgICAgICAgIEFBSVBPUlQ6ICI4NDQzIg0KICAgICAgICAgICAgICAgIENPTlNVTF9IT1NUOg0KICAgICAgICAgICAgICAgICAgICB7IGdldF9pbnB1dDogY29uc3VsX2hvc3QgfQ0KICAgICAgICAgICAgICAgIENPTlNVTF9QT1JUOiAiODUwMCINCiAgICAgICAgICAgICAgICBDQlNfSE9TVDoNCiAgICAgICAgICAgICAgICAgICAgeyBnZXRfaW5wdXQ6IGNic19ob3N0IH0NCiAgICAgICAgICAgICAgICBDQlNfUE9SVDogIjEwMDAwIg0KICAgICAgICAgICAgICAgIENPTkZJR19CSU5ESU5HX1NFUlZJQ0U6ICJjb25maWdfYmluZGluZ19zZXJ2aWNlIg0KICAgICAgICAgICAgcG9ydHM6DQogICAgICAgICAgICAgIC0gY29uY2F0OiBbIjExMDExOiIsIHsgZ2V0X2lucHV0OiBleHRlcm5hbF9wb3J0IH1dDQogIHRjYV9wb2xpY3k6DQogICAgdHlwZTogY2xhbXAubm9kZXMucG9saWN5DQogICAgcHJvcGVydGllczoNCiAgICAgIHBvbGljeV9pZDoNCiAgICAgICAgICAgZ2V0X2lucHV0OiBwb2xpY3lfaWQNCiAgICAgIHBvbGljeV9tb2RlbF9pZDoNCiAgICAgICAgICAgZ2V0X2lucHV0OiBwb2xpY3lfbW9kZWxfaWQ=","heatParameters":[]
}

